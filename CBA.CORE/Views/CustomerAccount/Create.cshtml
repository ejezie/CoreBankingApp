@model CBA.CORE.Models.CustomerAccount
@using static CBA.CORE.Enums.Enums;

@{ ViewBag.Title = "Create";
                Layout = "~/Views/Shared/_Layout.cshtml"; }

<h4>Create</h4>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CustomerAccount</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BranchID, "BranchID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BranchID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label asp-for="AccountStatus" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <select asp-for="AccountStatus" class="custom-select mr-sm-2"
                    asp-items="Html.GetEnumSelectList<AccountStatus>()">
                <option value="">Please Select</option>
            </select>
            <span asp-validation-for="AccountStatus" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="AccountType" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <select asp-for="AccountType" class="custom-select mr-sm-2"
                    asp-items="Html.GetEnumSelectList<AccountType>()">
                <option value="">Please Select</option>
            </select>
            <span asp-validation-for="AccountType" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerLongID, "Customer ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CustomerLongID, "CustomerLongID", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerName, "Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CustomerName, "CustomerName", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.CustomerID, "Customer ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CustomerID, "CustomerID", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
